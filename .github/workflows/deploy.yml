name: Deploy to AWS Lambda

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  AWS_REGION: us-east-1
  FUNCTION_NAME: boilerplate-lambda-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - run: dotnet restore
      - run: dotnet publish src/ReColhe.API/ReColhe.API.csproj -c Release -o ./publish --self-contained true

      - name: Create bootstrap file
        run: |
          cd publish
          echo '#!/bin/sh' > bootstrap
          echo '/var/task/ReColhe.API $@' >> bootstrap
          chmod +x bootstrap
          cd ..

      - run: |
          cd publish
          zip -r ../${{ env.FUNCTION_NAME }}.zip .
          cd ..

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Lambda
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ROLE_ARN="arn:aws:iam::${ACCOUNT_ID}:role/lambda-execution-role"
          
          # Create IAM role if not exists
          aws iam get-role --role-name lambda-execution-role 2>/dev/null || \
            aws iam create-role \
              --role-name lambda-execution-role \
              --assume-role-policy-document '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"},"Action":"sts:AssumeRole"}]}' && \
            aws iam attach-role-policy \
              --role-name lambda-execution-role \
              --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          
          # Create or update Lambda
          aws lambda get-function --function-name ${{ env.FUNCTION_NAME }} --region ${{ env.AWS_REGION }} 2>/dev/null && \
            aws lambda update-function-code --function-name ${{ env.FUNCTION_NAME }} --zip-file fileb://${{ env.FUNCTION_NAME }}.zip --region ${{ env.AWS_REGION }} || \
            aws lambda create-function \
              --function-name ${{ env.FUNCTION_NAME }} \
              --runtime provided.al2023 \
              --role "$ROLE_ARN" \
              --handler bootstrap \
              --zip-file fileb://${{ env.FUNCTION_NAME }}.zip \
              --region ${{ env.AWS_REGION }} \
              --timeout 30 \
              --memory-size 512 \
              --environment Variables={ASPNETCORE_ENVIRONMENT=Production}
